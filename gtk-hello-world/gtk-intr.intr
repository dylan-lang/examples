module: gtk-base
author: Matthias Hölzl, based on work by Eric Kidd and Andreas Bogk
copyright: Copyright (c) 1999, Matthias Hölzl

// This interface works with gtk+-1.1.13.

define interface
  #include "gtk/gtk.h",
    name-mapper: c-to-dylan,
    define: {"G_INLINE_FUNC" => "extern"},
    import: {// Enumerations
	     "GtkArrowType",
	     "GTK_ARROW_UP", "GTK_ARROW_DOWN",
	     "GTK_ARROW_LEFT", "GTK_ARROW_RIGHT"},
    // rename: {"GtkAttachOptions" => <gtk-attach-options>},
    import: {"GtkAttachOptions",
	     "GTK_EXPAND", "GTK_SHRINK", "GTK_FILL"},
    import: {"GtkButtonBoxStyle",
	     "GTK_BUTTONBOX_DEFAULT_STYLE",
	     "GTK_BUTTONBOX_SPREAD", "GTK_BUTTONBOX_EDGE",
	     "GTK_BUTTONBOX_START", "GTK_BUTTONBOX_END"},
    import: {"GtkCurveType",
	     "GTK_CURVE_TYPE_LINEAR", "GTK_CURVE_TYPE_SPLINE",
	     "GTK_CURVE_TYPE_FREE"},
    import: {"GtkDirectionType",
	     "GTK_DIR_TAB_FORWARD", "GTK_DIR_TAB_BACKWARD",
	     "GTK_DIR_UP", "GTK_DIR_DOWN",
	     "GTK_DIR_LEFT", "GTK_DIR_RIGHT"},
    import: {"GtkJustification",
	     "GTK_JUSTIFY_LEFT", "GTK_JUSTIFY_RIGHT",
	     "GTK_JUSTIFY_CENTER", "GTK_JUSTIFY_FILL"},
    import: {"GtkMatchType",
	     "GTK_MATCH_ALL", "GTK_MATCH_ALL_TAIL", "GTK_MATCH_HEAD",
	     "GTK_MATCH_TAIL", "GTK_MATCH_EXACT", "GTK_MATCH_LAST"},
    import: {"GtkMenuDirectionType",
	     "GTK_MENU_DIR_PARENT", "GTK_MENU_DIR_CHILD",
	     "GTK_MENU_DIR_NEXT", "GTK_MENU_DIR_PREV"},
    import: {"GtkMenuFactoryType",
	     "GTK_MENU_FACTORY_MENU", "GTK_MENU_FACTORY_MENU_BAR",
	     "GTK_MENU_FACTORY_OPTION_MENU"},
    import: {"GtkMetricType",
	     "GTK_PIXELS", "GTK_INCHES", "GTK_CENTIMETERS"},
    import: {"GtkOrientation",
	     "GTK_ORIENTATION_HORIZONTAL", "GTK_ORIENTATION_VERTICAL"},
    import: {"GtkCornerType",
	     "GTK_CORNER_TOP_LEFT", "GTK_CORNER_BOTTOM_LEFT",
	     "GTK_CORNER_TOP_RIGHT", "GTK_CORNER_BOTTOM_RIGHT"},
    import: {"GtkPackType",
	     "GTK_PACK_START", "GTK_PACK_END"},
    import: {"GtkPathPriorityType",
	     "GTK_PATH_PRIO_LOWEST", "GTK_PATH_PRIO_GTK",
	     "GTK_PATH_PRIO_APPLICATION", "GTK_PATH_PRIO_RC",
	     "GTK_PATH_PRIO_HIGHEST", "GTK_PATH_PRIO_MASK"},
    import: {"GtkPathType",
	     "GTK_PATH_WIDGET", "GTK_PATH_WIDGET_CLASS",
	     "GTK_PATH_CLASS"},
    import: {"GtkPolicyType",
	     "GTK_POLICY_ALWAYS", "GTK_POLICY_AUTOMATIC",
	     "GTK_POLICY_NEVER"},
    import: {"GtkPositionType",
	     "GTK_POS_LEFT", "GTK_POS_RIGHT",
	     "GTK_POS_TOP", "GTK_POS_BOTTOM"},
    import: {"GtkPreviewType",
	     "GTK_PREVIEW_COLOR", "GTK_PREVIEW_GRAYSCALE"},
    import: {"GtkReliefStyle",
	     "GTK_RELIEF_NORMAL", "GTK_RELIEF_HALF", "GTK_RELIEF_NONE"},
    import: {"GtkResizeMode",
	     "GTK_RESIZE_PARENT", "GTK_RESIZE_QUEUE",
	     "GTK_RESIZE_IMMEDIATE"},
    import: {"GtkSignalRunType",
	     "GTK_RUN_FIRST", "GTK_RUN_LAST", "GTK_RUN_BOTH",
	     "GTK_RUN_NO_RECURSE", "GTK_RUN_ACTION",
	     "GTK_RUN_NO_HOOKS"},
    import: {"GtkScrollType",
	     "GTK_SCROLL_NONE",
	     "GTK_SCROLL_STEP_BACKWARD", "GTK_SCROLL_STEP_FORWARD",
	     "GTK_SCROLL_PAGE_BACKWARD", "GTK_SCROLL_PAGE_FORWARD",
	     "GTK_SCROLL_JUMP"},
    import: {"GtkSelectionMode",
	     "GTK_SELECTION_SINGLE", "GTK_SELECTION_BROWSE",
	     "GTK_SELECTION_MULTIPLE", "GTK_SELECTION_EXTENDED"},
    import: {"GtkShadowType",
	     "GTK_SHADOW_NONE", "GTK_SHADOW_IN", "GTK_SHADOW_OUT",
	     "GTK_SHADOW_ETCHED_IN", "GTK_SHADOW_ETCHED_OUT"},
    import: {"GtkStateType",
	     "GTK_STATE_NORMAL", "GTK_STATE_ACTIVE", "GTK_STATE_PRELIGHT",
	     "GTK_STATE_SELECTED", "GTK_STATE_INSENSITIVE"},
    import: {"GtkSubmenuDirection",
	     "GTK_DIRECTION_LEFT", "GTK_DIRECTION_RIGHT"},
    import: {"GtkSubmenuPlacement",
	     "GTK_TOP_BOTTOM", "GTK_LEFT_RIGHT"},
    import: {"GtkToolbarStyle",
	     "GTK_TOOLBAR_ICONS", "GTK_TOOLBAR_TEXT",
	     "GTK_TOOLBAR_BOTH"},
    import: {"GtkTroughType",
	     "GTK_TROUGH_NONE", "GTK_TROUGH_START",
	     "GTK_TROUGH_END", "GTK_TROUGH_END"},
    import: {"GtkUpdateType",
	     "GTK_UPDATE_CONTINUOUS", "GTK_UPDATE_DISCONTINUOUS",
	     "GTK_UPDATE_DELAYED"},
    import: {"GtkVisibility",
	     "GTK_VISIBILITY_NONE", "GTK_VISIBILITY_PARTIAL",
	     "GTK_VISIBILITY_FULL"},
    import: {"GtkWindowPosition",
	     "GTK_WIN_POS_NONE", "GTK_WIN_POS_CENTER",
	     "GTK_WIN_POS_MOUSE"},
    import: {"GtkWindowType",
	     "GTK_WINDOW_TOPLEVEL", "GTK_WINDOW_DIALOG",
	     "GTK_WINDOW_POPUP"},
    import: {"GtkSortType",
	     "GTK_SORT_ASCENDING", "GTK_SORT_DESCENDING"},
    import: {// GtkType
	     "GtkType",
	     "struct _GtkTypeObject",
	     "struct _GtkTypeClass",
	     "struct _GtkArg",
	     "struct _GtkTypeInfo",
	     "struct _GtkTypeQuery",
	     "struct _GtkEnumValue",
	     "GtkClassInitFunc", "GtkObjectInitFunc",
	     "GtkSignalFunc", "GtkFunction",
	     "GtkDestroyNotify", "GtkCallbackMarshal",
	     "GtkSignalMarshaller",
	     "gtk_type_init", "gtk_type_unique",
	     "gtk_type_set_chunk_alloc",
	     "gtk_type_name", "gtk_type_from_name",
	     "gtk_type_parent", "gtk_type_class",
	     "gtk_type_parent_class",
	     "gtk_type_children_types",
	     "gtk_type_new", "gtk_type_free",
	     "gtk_type_describe_heritage",
	     "gtk_type_describe_tree",
	     "gtk_type_is_a",
	     "gtk_type_check_object_cast",
	     "gtk_type_check_class_cast",
	     "gtk_type_register_enum",
	     "gtk_type_register_flags",
	     "gtk_type_enum_get_values",
	     "gtk_type_flags_get_values",
	     "gtk_type_enum_find_value",
	     "gtk_type_flags_find_value",
	     "gtk_type_set_varargs_type",
	     "gtk_type_get_varargs_type",
	     "gtk_type_query"},
    import: {// GtkArgInfo
	     "struct _GtkArgInfo",
	     // struct _GtkArg defined in gtktypes.
	     "gtk_arg_new", "gtk_arg_copy", "gtk_arg_free",
	     "gtk_args_collect", "gtk_args_collect_cleanup",
	     "gtk_arg_get_info", "gtk_arg_type_new_static",
	     "gtk_args_query", "gtk_arg_name_strip_type",
	     "gtk_arg_info_equal", "gtk_arg_info_hash"},
    import: {// GtkObject
	     "GtkObjectFlags", "GtkArgFlags",
	     "struct _GtkObjectClass",
	     "struct _GtkObject",
	     "gtk_object_get_type",
	     "gtk_object_class_user_signal_new",
	     "gtk_object_class_user_signal_newv",
	     "gtk_object_new",
	     "gtk_object_newv",
	     "gtk_object_default_construct",
	     "gtk_object_constructed",
	     "gtk_object_sink",
	     "gtk_object_ref",
	     "gtk_object_unref",
	     "gtk_object_weakref",
	     "gtk_object_weakunref",
	     "gtk_object_destroy",
	     "gtk_object_getv",
	     "gtk_object_set",
	     "gtk_object_setv",
	     "gtk_object_query_args",
	     "gtk_object_set_data",
	     "gtk_object_set_data_full",
	     "gtk_object_remove_data",
	     "gtk_object_get_data",
	     "gtk_object_remove_no_notify",
	     "gtk_object_set_user_data",
	     "gtk_object_get_user_data",
	     "gtk_object_class_add_signals",
	     "gtk_object_add_arg_type",
	     "gtk_object_set_data_by_id",
	     "gtk_object_set_data_by_id_full",
	     "gtk_object_get_data_by_id",
	     "gtk_object_remove_data_by_id",
	     "gtk_object_remove_no_notify_by_id",
	     "gtk_object_data_try_key",
	     "gtk_object_data_force_id",
	     "gtk_object_arg_set",
	     "gtk_object_arg_get",
	     "gtk_object_args_collect",
	     "gtk_object_arg_get_info",
	     "gtk_trace_referencing"},
    import: {// GtkAccelgroup
	     "struct _GtkAccelGroup",
	     "struct _GtkAccelEntry",
	     "GtkAccelFlags",
	     "gtk_accel_group_new",
	     "gtk_accel_group_get_default",
	     "gtk_accel_group_ref",
	     "gtk_accel_group_unref",
	     "gtk_accel_group_activate",
	     "gtk_accel_groups_activate",
	     "gtk_accel_group_attach",
	     "gtk_accel_group_detach",
	     "gtk_accel_group_lock",
	     "gtk_accel_group_unlock",
	     "gtk_accel_group_get_entry",
	     "gtk_accel_group_lock_entry",
	     "gtk_accel_group_unlock_entry",
	     "gtk_accel_group_add",
	     "gtk_accel_group_remove",
	     "gtk_accel_group_handle_add",
	     "gtk_accel_group_handle_remove",
	     "gtk_accel_group_create_add",
	     "gtk_accel_group_create_remove",
	     // These exist in the header, but not the library.
	     // "gtk_accel_group_marshal_add",
	     // "gtk_accel_group_marshal_remove",
	     "gtk_accel_groups_from_object",
	     "gtk_accel_group_entries_from_object",
	     "gtk_accelerator_valid",
	     "gtk_accelerator_parse",
	     "gtk_accelerator_name",
	     "gtk_accelerator_set_default_mod_mask",
	     "gtk_accelerator_get_default_mod_mask"},
    import: {// GtkAccelLabel
	     "struct _GtkAccelLabel",
	     "struct _GtkAccelLabelClass",
	     "gtk_accel_label_get_type",
	     "gtk_accel_label_new",
	     "gtk_accel_label_get_accel_width",
	     "gtk_accel_label_set_accel_widget",
	     "gtk_accel_label_refetch"},
    import: {// GtkAdjustment
	     "struct _GtkAdjustment",
	     "struct _GtkAdjustmentClass",
	     "gtk_adjustment_get_type",
	     "gtk_adjustment_new",
	     "gtk_adjustment_changed",
	     "gtk_adjustment_value_changed",
	     "gtk_adjustment_clamp_page",
	     "gtk_adjustment_set_value"},
    import: {// GtkAlignment
	     "struct _GtkAlignment",
	     "struct _GtkAlignmentClass",
	     "gtk_alignment_get_type",
	     "gtk_alignment_new",
	     "gtk_alignment_set"},
    import: {// GtkArrow
	     "struct _GtkArrow",
	     "struct _GtkArrowClass",
	     "gtk_arrow_get_type",
	     "gtk_arrow_new",
	     "gtk_arrow_set"},
    import: {// GtkAspectFrame
	     "struct _GtkAspectFrame",
	     "struct _GtkAspectFrameClass",
	     "gtk_aspect_frame_get_type",
	     "gtk_aspect_frame_new",
	     "gtk_aspect_frame_set"},
    import: {// GtkButtonBox
	     "struct _GtkButtonBox",
	     "struct _GtkButtonBoxClass",
	     "gtk_button_box_get_type",
	     "gtk_button_box_get_child_size_default",
	     "gtk_button_box_get_child_ipadding_default",
	     "gtk_button_box_set_child_size_default",
	     "gtk_button_box_set_child_ipadding_default",
	     "gtk_button_box_get_spacing",
	     "gtk_button_box_get_layout",
	     "gtk_button_box_get_child_size",
	     "gtk_button_box_get_child_ipadding",
	     "gtk_button_box_set_spacing",
	     "gtk_button_box_set_layout",
	     "gtk_button_box_set_child_size",
	     "gtk_button_box_set_child_ipadding",
	     "gtk_button_box_child_requisition"},
    import: {// GtkBin
	     "struct _GtkBin",
	     "struct _GtkBinClass",
	     "gtk_bin_get_type"},
    import: {// GtkBindingSet
	     "struct _GtkPatternSpec",
	     "gtk_pattern_spec_init",
	     "gtk_pattern_spec_free_segs",
	     "gtk_pattern_match",
	     "gtk_pattern_match_string",
	     "gtk_pattern_match_simple",
	     "struct _GtkBindingSet",
	     "struct _GtkBindingEntry",
	     "struct _GtkBindingSignal",
	     "struct _GtkBindingArg",
	     "gtk_binding_set_new",
	     "gtk_binding_set_by_class",
	     "gtk_binding_set_find",
	     "gtk_bindings_activate",
	     "gtk_binding_set_activate",
	     "gtk_binding_entry_add",
	     "gtk_binding_entry_clear",
	     "gtk_binding_entry_add_signal",
	     "gtk_binding_set_add_path"}, // Nonpublic methods not wrapped.
    import: {// GtkBox
	     "struct _GtkBox",
	     "struct _GtkBoxClass",
	     "struct _GtkBoxChild",
	     "gtk_box_get_type",
	     "gtk_box_pack_start",
	     "gtk_box_pack_end",
	     "gtk_box_pack_start_defaults",
	     "gtk_box_pack_end_defaults",
	     "gtk_box_set_homogeneous",
	     "gtk_box_set_spacing",
	     "gtk_box_reorder_child",
	     "gtk_box_query_child_packing",
	     "gtk_box_set_child_packing"},
    import: {// GtkButton
	     "struct _GtkButton",
	     "struct _GtkButtonClass",
	     "gtk_button_get_type",
	     "gtk_button_new",
	     "gtk_button_new_with_label",
	     "gtk_button_pressed",
	     "gtk_button_released",
	     "gtk_button_clicked",
	     "gtk_button_enter",
	     "gtk_button_leave",
	     "gtk_button_set_relief",
	     "gtk_button_get_relief"},
    import: {// GtkCalendar
	     "struct _GtkCalendar",
	     "struct _GtkCalendarClass",
	     "gtk_calendar_get_type",
	     "gtk_calendar_new",
	     "gtk_calendar_select_month",
	     "gtk_calendar_select_day",
	     "gtk_calendar_mark_day",
	     "gtk_calendar_unmark_day",
	     "gtk_calendar_clear_marks",
	     "gtk_calendar_display_options",
	     "gtk_calendar_get_date",
	     "gtk_calendar_freeze",
	     "gtk_calendar_thaw"},
    import: {// GtkCheckButton
	     "struct _GtkCheckButton",
	     "struct _GtkCheckButtonClass",
	     "gtk_check_button_get_type",
	     "gtk_check_button_new",
	     "gtk_check_button_new_with_label"},
    import: {// GtkCheckMenuItem
	     "struct _GtkCheckMenuItem",
	     "struct _GtkCheckMenuItemClass",
	     "gtk_check_menu_item_get_type",
	     "gtk_check_menu_item_new",
	     "gtk_check_menu_item_new_with_label",
	     "gtk_check_menu_item_set_active",
	     "gtk_check_menu_item_set_show_toggle",
	     "gtk_check_menu_item_toggled"},
    import: {// GtkCList
	     // The don't work because the header file reads
	     // someting like 'GTK_CLIST_IN_DRAG = 1 << 7'
	     "GTK_CLIST_IN_DRAG", "GTK_CLIST_ROW_HEIGHT_SET",
	     "GTK_CLIST_SHOW_TITLES", "GTK_CLIST_CHILD_HAS_FOCUS",
	     "GTK_CLIST_ADD_MODE", "GTK_CLIST_AUTO_SORT",
	     "GTK_CLIST_AUTO_RESIZE_BLOCKED", "GTK_CLIST_REORDERABLE",
	     "GTK_CLIST_USE_DRAG_ICONS", "GTK_CLIST_DRAW_DRAG_LINE",
	     "GTK_CLIST_DRAW_DRAG_RECT",
	     "GtkCellType",
	     "GTK_CELL_EMPTY", "GTK_CELL_TEXT", "GTK_CELL_PIXMAP",
	     "GTK_CELL_PIXTEXT", "GTK_CELL_WIDGET",
	     "GtkCListDragPos",
	     "GTK_CLIST_DRAG_NONE", "GTK_CLIST_DRAG_BEFORE",
	     "GTK_CLIST_DRAG_INTO", "GTK_CLIST_DRAG_AFTER",
	     "GtkButtonAction",
	     "GTK_BUTTON_IGNORED", "GTK_BUTTON_SELECTS",
	     "GTK_BUTTON_DRAGS", "GTK_BUTTON_EXPANDS",
	     "struct _GtkCList",
	     "struct _GtkCListClass",
	     "struct _GtkCListColumn",
	     "struct _GtkCListRow",
	     "struct _GtkCell",
	     "struct _GtkCellText",
	     "struct _GtkCellPixmap",
	     "struct _GtkCellPixText",
	     "struct _GtkCellWidget",
	     "struct _GtkCListCellInfo",
	     "struct _GtkCListDestInfo",
	     "gtk_clist_get_type",
	     "gtk_clist_construct",
	     "gtk_clist_new",
	     "gtk_clist_new_with_titles",
	     "gtk_clist_set_hadjustment",
	     "gtk_clist_set_vadjustment",
	     "gtk_clist_set_shadow_type",
	     "gtk_clist_set_selection_mode",
	     "gtk_clist_set_reorderable",
	     "gtk_clist_set_use_drag_icons",
	     "gtk_clist_set_button_actions",
	     "gtk_clist_freeze",
	     "gtk_clist_thaw",
	     "gtk_clist_column_titles_show",
	     "gtk_clist_column_titles_hide",
	     "gtk_clist_column_title_active",
	     "gtk_clist_column_title_passive",
	     "gtk_clist_column_titles_active",
	     "gtk_clist_column_titles_passive",
	     "gtk_clist_set_column_title",
	     "gtk_clist_set_column_widget",
	     "gtk_clist_get_column_widget",
	     "gtk_clist_set_column_justification",
	     "gtk_clist_set_column_visibility",
	     "gtk_clist_set_column_resizeable",
	     "gtk_clist_set_column_auto_resize",
	     "gtk_clist_columns_autosize",
	     "gtk_clist_optimal_column_width",
	     "gtk_clist_set_column_width",
	     "gtk_clist_set_column_min_width",
	     "gtk_clist_set_column_max_width",
	     "gtk_clist_set_row_height",
	     "gtk_clist_moveto",
	     "gtk_clist_row_is_visible",
	     "gtk_clist_get_cell_type",
	     "gtk_clist_set_text",
	     "gtk_clist_get_text",
	     "gtk_clist_set_pixmap",
	     "gtk_clist_get_pixmap",
	     "gtk_clist_set_pixtext",
	     "gtk_clist_get_pixtext",
	     "gtk_clist_set_foreground",
	     "gtk_clist_set_background",
	     "gtk_clist_set_cell_style",
	     "gtk_clist_get_cell_style",
	     "gtk_clist_set_row_style",
	     "gtk_clist_get_row_style",
	     "gtk_clist_set_shift",
	     "gtk_clist_set_selectable",
	     "gtk_clist_get_selectable",
	     "gtk_clist_prepend",
	     "gtk_clist_append",
	     "gtk_clist_insert",
	     "gtk_clist_remove",
	     "gtk_clist_set_row_data",
	     "gtk_clist_set_row_data_full",
	     "gtk_clist_get_row_data",
	     "gtk_clist_find_row_from_data",
	     "gtk_clist_select_row",
	     "gtk_clist_unselect_row",
	     "gtk_clist_undo_selection",
	     "gtk_clist_clear",
	     "gtk_clist_get_selection_info",
	     "gtk_clist_select_all",
	     "gtk_clist_unselect_all",
	     "gtk_clist_swap_rows",
	     "gtk_clist_row_move",
	     "gtk_clist_set_compare_func",
	     "gtk_clist_set_sort_column",
	     "gtk_clist_set_sort_type",
	     "gtk_clist_sort",
	     "gtk_clist_set_auto_sort"},
    import: {// GtkColorSelection
	     "struct _GtkColorSelection",
	     "struct _GtkColorSelectionClass",
	     "struct _GtkColorSelectionDialog",
	     "struct _GtkColorSelectionDialogClass",
	     "gtk_color_selection_get_type",
	     "gtk_color_selection_new",
	     "gtk_color_selection_set_update_policy",
	     "gtk_color_selection_set_opacity",
	     "gtk_color_selection_set_color",
	     "gtk_color_selection_get_color",
	     "gtk_color_selection_dialog_get_type",
	     "gtk_color_selection_dialog_new"},
    import: {// GtkCombo
	     "struct _GtkCombo",
	     "struct _GtkComboClass",
	     "gtk_combo_get_type",
	     "gtk_combo_new",
	     "gtk_combo_set_value_in_list",
	     "gtk_combo_set_use_arrows",
	     "gtk_combo_set_use_arrows_always",
	     "gtk_combo_set_case_sensitive",
	     "gtk_combo_set_item_string",
	     "gtk_combo_set_popdown_strings",
	     "gtk_combo_disable_activate"},
    import: {// GtkContainer
	     "struct _GtkContainer",
	     "struct _GtkContainerClass",
	     "gtk_container_get_type",
	     "gtk_container_border_width",
	     "gtk_container_set_border_width",
	     "gtk_container_add",
	     "gtk_container_remove",
	     "gtk_container_set_resize_mode",
	     "gtk_container_check_resize",
	     "gtk_container_foreach",
	     "gtk_container_foreach_full",
	     "gtk_container_children",
	     "gtk_container_focus",
	     "gtk_container_set_focus_child",
	     "gtk_container_set_focus_vadjustment",
	     "gtk_container_set_focus_hadjustment",
	     "gtk_container_register_toplevel",
	     "gtk_container_unregister_toplevel",
	     "gtk_container_get_toplevels",
	     "gtk_container_resize_children",
	     "gtk_container_child_type",
	     "gtk_container_add_child_arg_type",
	     "gtk_container_query_child_args",
	     "gtk_container_child_getv",
	     "gtk_container_child_setv",
	     "gtk_container_add_with_args",
	     "gtk_container_addv",
	     "gtk_container_child_set",
	     "gtk_container_queue_resize",
	     "gtk_container_clear_resize_widgets",
	     "gtk_container_arg_set",
	     "gtk_container_arg_get",
	     "gtk_container_child_args_collect",
	     "gtk_container_child_arg_get_info",
	     "gtk_container_forall",
	     "gtk_container_child_composite_name"},
    import: {// GtkCTree
	     "GtkCTreePos",
	     "GTK_CTREE_POS_BEFORE", "GTK_CTREE_POS_AS_CHILD",
	     "GTK_CTREE_POS_AFTER",
	     "GtkCTreeLineStyle",
	     "GTK_CTREE_LINES_NONE", "GTK_CTREE_LINES_SOLID",
	     "GTK_CTREE_LINES_DOTTED", "GTK_CTREE_LINES_TABBED",
	     "GtkCTreeExpanderStyle",
	     "GTK_CTREE_EXPANDER_NONE", "GTK_CTREE_EXPANDER_SQUARE",
	     "GTK_CTREE_EXPANDER_TRIANGLE", "GTK_CTREE_EXPANDER_CIRCULAR",
	     "GtkCTreeExpansionType",
	     "GTK_CTREE_EXPANSION_EXPAND",
	     "GTK_CTREE_EXPANSION_EXPAND_RECURSIVE",
	     "GTK_CTREE_EXPANSION_COLLAPSE",
	     "GTK_CTREE_EXPANSION_COLLAPSE_RECURSIVE",
	     "GTK_CTREE_EXPANSION_TOGGLE",
	     "GTK_CTREE_EXPANSION_TOGGLE_RECURSIVE",
	     "struct _GtkCTree",
	     "struct _GtkCTreeClass",
	     "struct _GtkCTreeRow",
	     "struct _GtkCTreeNode",
	     "GtkCTreeFunc", "GtkCTreeGNodeFunc",
	     "GtkCTreeCompareDragFunc",
	     "gtk_ctree_get_type",
	     "gtk_ctree_construct",
	     "gtk_ctree_new_with_titles",
	     "gtk_ctree_new",
	     "gtk_ctree_insert_node",
	     "gtk_ctree_remove_node",
	     "gtk_ctree_insert_gnode",
	     "gtk_ctree_export_to_gnode",
	     "gtk_ctree_post_recursive",
	     "gtk_ctree_post_recursive_to_depth",
	     "gtk_ctree_pre_recursive",
	     "gtk_ctree_pre_recursive_to_depth",
	     "gtk_ctree_is_viewable",
	     "gtk_ctree_last",
	     "gtk_ctree_find_node_ptr",
	     "gtk_ctree_node_nth",
	     "gtk_ctree_find",
	     "gtk_ctree_is_ancestor",
	     "gtk_ctree_find_by_row_data",
	     "gtk_ctree_find_all_by_row_data",
	     "gtk_ctree_find_by_row_data_custom",
	     "gtk_ctree_find_all_by_row_data_custom",
	     "gtk_ctree_is_hot_spot",
	     "gtk_ctree_move",
	     "gtk_ctree_expand",
	     "gtk_ctree_expand_recursive",
	     "gtk_ctree_expand_to_depth",
	     "gtk_ctree_collapse",
	     "gtk_ctree_collapse_recursive",
	     "gtk_ctree_collapse_to_depth",
	     "gtk_ctree_toggle_expansion",
	     "gtk_ctree_toggle_expansion_recursive",
	     "gtk_ctree_select",
	     "gtk_ctree_select_recursive",
	     "gtk_ctree_unselect",
	     "gtk_ctree_unselect_recursive",
	     "gtk_ctree_real_select_recursive",
	     "gtk_ctree_node_set_text",
	     "gtk_ctree_node_set_pixmap",
	     "gtk_ctree_node_set_pixtext",
	     "gtk_ctree_set_node_info",
	     "gtk_ctree_node_set_shift",
	     "gtk_ctree_node_set_selectable",
	     "gtk_ctree_node_get_selectable",
	     "gtk_ctree_node_get_cell_type",
	     "gtk_ctree_node_get_text",
	     "gtk_ctree_node_get_pixmap",
	     "gtk_ctree_node_get_pixtext",
	     "gtk_ctree_get_node_info",
	     "gtk_ctree_node_set_row_style",
	     "gtk_ctree_node_get_row_style",
	     "gtk_ctree_node_set_cell_style",
	     "gtk_ctree_node_get_cell_style",
	     "gtk_ctree_node_set_foreground",
	     "gtk_ctree_node_set_background",
	     "gtk_ctree_node_set_row_data",
	     "gtk_ctree_node_set_row_data_full",
	     "gtk_ctree_node_get_row_data",
	     "gtk_ctree_node_moveto",
	     "gtk_ctree_node_is_visible",
	     "gtk_ctree_set_indent",
	     "gtk_ctree_set_spacing",
	     "gtk_ctree_set_show_stub",
	     "gtk_ctree_set_line_style",
	     "gtk_ctree_set_expander_style",
	     "gtk_ctree_set_drag_compare_func",
	     "gtk_ctree_sort_node",
	     "gtk_ctree_sort_recursive"},
    import: {// GtkCurve
	     "struct _GtkCurve",
	     "struct _GtkCurveClass",
	     "gtk_curve_get_type",
	     "gtk_curve_new",
	     "gtk_curve_reset",
	     "gtk_curve_set_gamma",
	     "gtk_curve_set_range",
	     "gtk_curve_get_vector",
	     "gtk_curve_set_vector",
	     "gtk_curve_set_curve_type"},
    import: {// GtkData
	     "struct _GtkData",
	     "struct _GtkDataClass",
	     "gtk_data_get_type"},
    import: {// GtkDialog
	     "struct _GtkDialog",
	     "struct _GtkDialogClass",
	     // "struct _GtkDialogButton",
	     "gtk_dialog_get_type",
	     "gtk_dialog_new"},
    import: {// Drag and drop (French: on drague?)
	     "GtkDestDefaults",
	     "GTK_DEST_DEFAULT_MOTION", "GTK_DEST_DEFAULT_HIGHLIGHT",
	     "GTK_DEST_DEFAULT_DROP", "GTK_DEST_DEFAULT_ALL",
	     "GtkTargetFlags",
	     "GTK_TARGET_SAME_APP", "GTK_TARGET_SAME_WIDGET",
	     "gtk_drag_get_data",
	     "gtk_drag_finish",
	     "gtk_drag_get_source_widget",
	     "gtk_drag_highlight",
	     "gtk_drag_unhighlight",
	     "gtk_drag_dest_set",
	     "gtk_drag_dest_set_proxy",
	     "gtk_drag_dest_unset",
	     "gtk_drag_source_set",
	     "gtk_drag_source_unset",
	     "gtk_drag_source_set_icon",
	     "gtk_drag_begin",
	     "gtk_drag_set_icon_widget",
	     "gtk_drag_set_icon_pixmap",
	     "gtk_drag_set_icon_default",
	     "gtk_drag_set_default_icon",
	     "gtk_drag_source_handle_event",
	     "gtk_drag_dest_handle_event"},
    import: {// GtkDrawingArea
	     "struct _GtkDrawingArea",
	     "struct _GtkDrawingAreaClass",
	     "gtk_drawing_area_get_type",
	     "gtk_drawing_area_new",
	     "gtk_drawing_area_size"},
    import: {// GtkEditable
	     "struct _GtkEditable",
	     "struct _GtkEditableClass",
	     "GtkTextFunction",
	     "gtk_editable_get_type",
	     "gtk_editable_select_region",
	     "gtk_editable_insert_text",
	     "gtk_editable_delete_text",
	     "gtk_editable_get_chars",
	     "gtk_editable_cut_clipboard",
	     "gtk_editable_copy_clipboard",
	     "gtk_editable_paste_clipboard",
	     "gtk_editable_claim_selection",
	     "gtk_editable_delete_selection",
	     "gtk_editable_changed",
	     "gtk_editable_set_position",
	     "gtk_editable_get_position",
	     "gtk_editable_set_editable"},
    import: {// GtkEntry
	     "struct _GtkEntry",
	     "struct _GtkEntryClass",
	     "gtk_entry_get_type",
	     "gtk_entry_new",
	     "gtk_entry_new_with_max_length",
	     "gtk_entry_append_text",
	     "gtk_entry_prepend_text",
	     "gtk_entry_set_position",
	     "gtk_entry_get_text",
	     "gtk_entry_select_region",
	     "gtk_entry_set_visibility",
	     "gtk_entry_set_editable",
	     "gtk_entry_set_max_length"},
    import: {// GtkEventBox
	     "struct _GtkEventBox",
	     "struct _GtkEventBoxClass",
	     "gtk_event_box_get_type",
	     "gtk_event_box_new"},
    import: {// Info about Gtk (version, etc.)
	     "GTK_MAJOR_VERSION", "GTK_MINOR_VERSION", "GTK_MICRO_VERSION",
	     "GTK_BINARY_AGE", "GTK_INTERFACE_AGE",
	     "GTK_HAVE_CONTAINER_FOCUS_ADJUSTMENTS",
	     "GTK_HAVE_SIGNAL_INIT",
	     "GTK_HAVE_FEATURES_1_1_0", "GTK_HAVE_FEATURES_1_1_2",
	     "GTK_HAVE_FEATURES_1_1_4", "GTK_HAVE_FEATURES_1_1_5",
	     "GTK_HAVE_FEATURES_1_1_6", "GTK_HAVE_FEATURES_1_1_7",
	     "GTK_HAVE_FEATURES_1_1_8", "GTK_HAVE_FEATURES_1_1_9",
	     "GTK_HAVE_FEATURES_1_1_10", "GTK_HAVE_FEATURES_1_1_11",
	     "GTK_HAVE_FEATURES_1_1_12", "GTK_HAVE_FEATURES_1_1_13"},
    import: {// GtkFileSelection
	     "struct _GtkFileSelection",
	     "struct _GtkFileSelectionClass",
	     "gtk_file_selection_get_type",
	     "gtk_file_selection_new",
	     "gtk_file_selection_set_filename",
	     "gtk_file_selection_get_filename",
	     "gtk_file_selection_complete",
	     "gtk_file_selection_show_fileop_buttons",
	     "gtk_file_selection_hide_fileop_buttons"},
    import: {// GtkFixed
	     "struct _GtkFixed",
	     "struct _GtkFixedClass",
	     "struct _GtkFixedChild",
	     "gtk_fixed_get_type",
	     "gtk_fixed_new",
	     "gtk_fixed_put",
	     "gtk_fixed_move"},
    import: {// GtkFontSelection
	     "struct _GtkFontSelection",
	     "struct _GtkFontSelectionClass",
	     "struct _GtkFontSelectionDialog",
	     "struct _GtkFontSelectionDialogClass",
	     "GTK_NUM_FONT_PROPERTIES", "GTK_NUM_STYLE_PROPERTIES",
	     "GtkFontMetricType",
	     "GTK_FONT_METRIC_PIXELS", "GTK_FONT_METRIC_POINTS",
	     "GtkFontType",
	     "GTK_FONT_BITMAP", "GTK_FONT_SCALABLE",
	     "GTK_FONT_SCALABLE_BITMAP",
	     "GtkFontFilterType",
	     "GTK_FONT_FILTER_BASE", "GTK_FONT_FILTER_USER",
	     "struct _GtkFontFilter",
	     "gtk_font_selection_get_type",
	     "gtk_font_selection_new",
	     "gtk_font_selection_get_font_name",
	     "gtk_font_selection_get_font",
	     "gtk_font_selection_set_font_name",
	     "gtk_font_selection_set_filter",
	     "gtk_font_selection_get_preview_text",
	     "gtk_font_selection_set_preview_text",
	     "gtk_font_selection_dialog_get_type",
	     "gtk_font_selection_dialog_new",
	     "gtk_font_selection_dialog_get_font_name",
	     "gtk_font_selection_dialog_get_font",
	     "gtk_font_selection_dialog_set_font_name",
	     "gtk_font_selection_dialog_set_filter",
	     "gtk_font_selection_dialog_get_preview_text",
	     "gtk_font_selection_dialog_set_preview_text"},
    import: {// GtkFrame
	     "struct _GtkFrame",
	     "struct _GtkFrameClass",
	     "gtk_frame_get_type",
	     "gtk_frame_new",
	     "gtk_frame_set_label",
	     "gtk_frame_set_label_align",
	     "gtk_frame_set_shadow_type"},
    import: {// GtkGammaCurve
	     "struct _GtkGammaCurve",
	     "struct _GtkGammaCurveClass",
	     "gtk_gamma_curve_get_type",
	     "gtk_gamma_curve_new"},
    import: {// Graphics context
	     "gtk_gc_get", "gtk_gc_release"},
    import: {// GtkHandleBox
	     "struct _GtkHandleBox",
	     "struct _GtkHandleBoxClass",
	     "gtk_handle_box_get_type",
	     "gtk_handle_box_new",
	     "gtk_handle_box_set_shadow_type"},
    import: {// GtkHButtonBox
	     "struct _GtkHButtonBox",
	     "struct _GtkHButtonBoxClass",
	     "gtk_hbutton_box_get_type",
	     "gtk_hbutton_box_new",
	     "gtk_hbutton_box_get_spacing_default",
	     "gtk_hbutton_box_get_layout_default",
	     "gtk_hbutton_box_set_spacing_default",
	     "gtk_hbutton_box_set_layout_default"},
    import: {// GtkHBox
	     "struct _GtkHBox",
	     "struct _GtkHBoxClass",
	     "gtk_hbox_get_type", "gtk_hbox_new"},
    import: {// GtkHPaned
	     "struct _GtkHPaned",
	     "struct _GtkHPanedClass",
	     "gtk_hpaned_get_type",
	     "gtk_hpaned_new"},
    import: {// GtkHRuler
	     "struct _GtkHRuler",
	     "struct _GtkHRulerClass",
	     "gtk_hruler_get_type",
	     "gtk_hruler_new"},
    import: {// GtkHScale
	     "struct _GtkHScale",
	     "struct _GtkHScaleClass",
	     "gtk_hscale_get_type",
	     "gtk_hscale_new"},
    import: {// GtkHScrollbar
	     "struct _GtkHScrollbar",
	     "struct _GtkHScrollbarClass",
	     "gtk_hscrollbar_get_type",
	     "gtk_hscrollbar_new"},
    import: {// GtkHSeparator
	     "struct _GtkHSeparator",
	     "struct _GtkHSeparatorClass",
	     "gtk_hseparator_get_type",
	     "gtk_hseparator_new"},
    import: {// GtkImage
	     "struct _GtkImage",
	     "struct _GtkImageClass",
	     "gtk_image_get_type",
	     "gtk_image_new",
	     "gtk_image_set",
	     "gtk_image_get"},
    import: {// GtkInputDialog
	     "struct _GtkInputDialog",
	     "struct _GtkInputDialogClass",
	     "gtk_input_dialog_get_type",
	     "gtk_input_dialog_new"},
    import: {// GtkItem
	     "struct _GtkItem",
	     "struct _GtkItemClass",
	     "gtk_item_get_type",
	     "gtk_item_select",
	     "gtk_item_deselect",
	     "gtk_item_toggle"},
    import: {// GtkItemFactory
	     "GtkPrintFunc",
	     "GtkTranslateFunc",
	     "GtkItemFactoryCallback",
	     "GtkItemFactoryCallback1",
	     "struct _GtkItemFactory",
	     "struct _GtkItemFactoryClass",
	     "struct _GtkItemFactoryEntry",
	     "struct _GtkItemFactoryItem",
	     "gtk_item_factory_get_type",
	     "gtk_item_factory_new",
	     "gtk_item_factory_construct",
	     "gtk_item_factory_parse_rc",
	     "gtk_item_factory_parse_rc_string",
	     "gtk_item_factory_parse_rc_scanner",
	     "gtk_item_factory_from_widget",
	     "gtk_item_factory_path_from_widget",
	     "gtk_item_factory_get_widget",
	     "gtk_item_factory_get_widget_by_action",
	     "gtk_item_factory_dump_items",
	     "gtk_item_factory_dump_rc",
	     "gtk_item_factory_print_func",
	     "gtk_item_factory_create_item",
	     "gtk_item_factory_create_items",
	     "gtk_item_factory_delete_item",
	     "gtk_item_factory_delete_entry",
	     "gtk_item_factory_delete_entries",
	     "gtk_item_factory_popup",
	     "gtk_item_factory_popup_with_data",
	     "gtk_item_factory_popup_data",
	     "gtk_item_factory_popup_data_from_widget",
	     "gtk_item_factory_set_translate_func",
	     "gtk_item_factory_from_path",
	     "gtk_item_factory_create_menu_entries",
	     "gtk_item_factories_path_delete",
	     "GtkItemFactoryCallback2",
	     "gtk_item_factory_create_items_ac"},
    import: {// GtkLabel
	     "struct _GtkLabel",
	     "struct _GtkLabelClass",
	     "struct _GtkLabelWord",
	     "gtk_label_get_type",
	     "gtk_label_new",
	     "gtk_label_set_text",
	     "gtk_label_set_justify",
	     "gtk_label_set_pattern",
	     "gtk_label_set_line_wrap",
	     "gtk_label_get",
	     "gtk_label_parse_uline"},
    import: {// GtkLayout
	     "struct _GtkLayout",
	     "struct _GtkLayoutClass",
	     // "struct _GtkLayoutChild",
	     "gtk_layout_get_type",
	     "gtk_layout_new",
	     "gtk_layout_put",
	     "gtk_layout_move",
	     "gtk_layout_set_size",
	     "gtk_layout_freeze",
	     "gtk_layout_thaw",
	     "gtk_layout_get_hadjustment",
	     "gtk_layout_get_vadjustment",
	     "gtk_layout_set_hadjustment",
	     "gtk_layout_set_vadjustment"},
    import: {// GtkList
	     "struct _GtkList",
	     "struct _GtkListClass",
	     "gtk_list_get_type",
	     "gtk_list_new",
	     "gtk_list_insert_items",
	     "gtk_list_append_items",
	     "gtk_list_prepend_items",
	     "gtk_list_remove_items",
	     "gtk_list_remove_items_no_unref",
	     "gtk_list_clear_items",
	     "gtk_list_select_item",
	     "gtk_list_unselect_item",
	     "gtk_list_select_child",
	     "gtk_list_unselect_child",
	     "gtk_list_child_position",
	     "gtk_list_set_selection_mode",
	     "gtk_list_extend_selection",
	     "gtk_list_start_selection",
	     "gtk_list_end_selection",
	     "gtk_list_select_all",
	     "gtk_list_unselect_all",
	     "gtk_list_scroll_horizontal",
	     "gtk_list_scroll_vertical",
	     "gtk_list_toggle_add_mode",
	     "gtk_list_toggle_focus_row",
	     "gtk_list_toggle_row",
	     "gtk_list_undo_selection",
	     "gtk_list_end_drag_selection"},
    import: {// GtkListItem
	     "struct _GtkListItem",
	     "struct _GtkListItemClass",
	     "gtk_list_item_get_type",
	     "gtk_list_item_new",
	     "gtk_list_item_new_with_label",
	     "gtk_list_item_select",
	     "gtk_list_item_deselect"},
    import: {// Gtk main loop.
	     "GTK_PRIORITY_REDRAW", "GTK_PRIORITY_RESIZE",
	     "GTK_PRIORITY_HIGH", "GTK_PRIORITY_INTERNAL",
	     "GTK_PRIORITY_DEFAULT", "GTK_PRIORITY_LOW",
	     "GtkModuleInitFunc", "GtkKeySnoopFunc",
	     "gtk_major_version", "gtk_minor_version",
	     "gtk_micro_version", "gtk_binary_age",
	     "gtk_interface_age", "gtk_check_version",
	     "gtk_init", "gtk_exit", "gtk_set_locale",
	     "gtk_events_pending", "gtk_main_do_event",
	     "gtk_main", "gtk_main_level", "gtk_main_quit",
	     "gtk_main_iteration", "gtk_main_iteration_do",
	     "gtk_true", "gtk_false", "gtk_grab_add",
	     "gtk_grab_get_current", "gtk_grab_remove",
	     "gtk_init_add", "gtk_quit_add_destroy",
	     "gtk_quit_add", "gtk_quit_add_full",
	     "gtk_quit_remove", "gtk_quit_remove_by_data",
	     "gtk_timeout_add", "gtk_timeout_add_full",
	     "gtk_timeout_remove", "gtk_idle_add",
	     "gtk_idle_add_priority", "gtk_idle_add_full",
	     "gtk_idle_remove", "gtk_idle_add_full",
	     "gtk_idle_remove", "gtk_idle_remove_by_data",
	     "gtk_input_add_full", "gtk_input_remove",
	     "gtk_key_snooper_install", "gtk_key_snooper_remove",
	     "gtk_get_current_event", "gtk_get_event_widget",
	     "gtk_propagate_event"},
    import: {// Gtk event marshaling
	     "gtk_marshal_BOOL__NONE",
	     "gtk_marshal_BOOL__POINTER",
	     "gtk_marshal_BOOL__POINTER_POINTER_INT_INT",
	     "gtk_marshal_BOOL__POINTER_INT_INT",
	     "gtk_marshal_BOOL__POINTER_INT_INT_UINT"}, // etc.
    import: {// GtkMenu
	     "struct _GtkMenu",
	     "struct _GtkMenuClass",
	     "GtkMenuPositionFunc",
	     "GtkMenuDetachFunc",
	     "gtk_menu_get_type",
	     "gtk_menu_new",
	     "gtk_menu_append",
	     "gtk_menu_prepend",
	     "gtk_menu_insert",
	     "gtk_menu_popup",
	     "gtk_menu_reposition",
	     "gtk_menu_popdown",
	     "gtk_menu_get_active",
	     "gtk_menu_set_active",
	     "gtk_menu_set_accel_group",
	     "gtk_menu_attach_to_widget",
	     "gtk_menu_detach",
	     "gtk_menu_get_attach_widget",
	     "gtk_menu_set_tearoff_state"},
    import: {// GtkMenuBar
	     "struct _GtkMenuBar",
	     "struct _GtkMenuBarClass",
	     "gtk_menu_bar_get_type",
	     "gtk_menu_bar_new",
	     "gtk_menu_bar_append",
	     "gtk_menu_bar_prepend",
	     "gtk_menu_bar_insert",
	     "gtk_menu_bar_set_shadow_type"},
    import: {// GtkMenuFactory
	     "struct _GtkMenuEntry",
	     "struct _GtkMenuPath",
	     "struct _GtkMenuFactory",
	     "GtkMenuCallback",
	     "gtk_menu_factory_new",
	     "gtk_menu_factory_destroy",
	     "gtk_menu_factory_add_entries",
	     "gtk_menu_factory_add_subfactory",
	     "gtk_menu_factory_remove_paths",
	     "gtk_menu_factory_remove_entries",
	     "gtk_menu_factory_remove_subfactory",
	     "gtk_menu_factory_find"},
    import: {// GtkMenuItem
	     "struct _GtkMenuItem",
	     "struct _GtkMenuItemClass",
	     "gtk_menu_item_get_type",
	     "gtk_menu_item_new",
	     "gtk_menu_item_new_with_label",
	     "gtk_menu_item_set_submenu",
	     "gtk_menu_item_remove_submenu",
	     "gtk_menu_item_set_placement",
	     "gtk_menu_item_configure",
	     "gtk_menu_item_select",
	     "gtk_menu_item_deselect",
	     "gtk_menu_item_activate",
	     "gtk_menu_item_right_justify"},
    import: {// GtkMenuShell
	     "struct _GtkMenuShell",
	     "struct _GtkMenuShellClass",
	     "gtk_menu_shell_get_type",
	     "gtk_menu_shell_append",
	     "gtk_menu_shell_prepend",
	     "gtk_menu_shell_insert",
	     "gtk_menu_shell_deactivate",
	     "gtk_menu_shell_select_item",
	     "gtk_menu_shell_activate_item"},
    import: {// GtkMisc
	     "struct _GtkMisc",
	     "struct _GtkMiscClass",
	     "gtk_misc_get_type",
	     "gtk_misc_set_alignment",
	     "gtk_misc_set_padding"},
    import: {// GtkNotebook
	     "struct _GtkNotebook",
	     "struct _GtkNotebookClass",
	     "struct _GtkNotebookPage",
	     "gtk_notebook_get_type",
	     "gtk_notebook_new",
	     "gtk_notebook_append_page",
	     "gtk_notebook_append_page_menu",
	     "gtk_notebook_prepend_page",
	     "gtk_notebook_prepend_page_menu",
	     "gtk_notebook_insert_page",
	     "gtk_notebook_insert_page_menu",
	     "gtk_notebook_remove_page",
	     "gtk_notebook_get_current_page",
	     "gtk_notebook_get_nth_page",
	     "gtk_notebook_page_num",
	     "gtk_notebook_set_page",
	     "gtk_notebook_next_page",
	     "gtk_notebook_prev_page",
	     "gtk_notebook_set_show_border",
	     "gtk_notebook_set_show_tabs",
	     "gtk_notebook_set_tab_pos",
	     "gtk_notebook_set_homogeneous_tabs",
	     "gtk_notebook_set_tab_border",
	     "gtk_notebook_set_tab_hborder",
	     "gtk_notebook_set_tab_vborder",
	     "gtk_notebook_set_scrollable",
	     "gtk_notebook_popup_enable",
	     "gtk_notebook_popup_disable",
	     "gtk_notebook_get_tab_label",
	     "gtk_notebook_set_tab_label",
	     "gtk_notebook_set_tab_label_text",
	     "gtk_notebook_get_menu_label",
	     "gtk_notebook_set_menu_label",
	     "gtk_notebook_set_menu_label_text",
	     "gtk_notebook_query_tab_label_packing",
	     "gtk_notebook_set_tab_label_packing",
	     "gtk_notebook_reorder_child"},
    import: {// GtkOptionMenu
	     "struct _GtkOptionMenu",
	     "struct _GtkOptionMenuClass",
	     "gtk_option_menu_get_type",
	     "gtk_option_menu_new",
	     "gtk_option_menu_get_menu",
	     "gtk_option_menu_set_menu",
	     "gtk_option_menu_remove_menu",
	     "gtk_option_menu_set_history"},
    import: {// GtkPacker
	     "struct _GtkPacker",
	     "struct _GtkPackerClass",
	     "struct _GtkPackerChild",
	     "GtkPackerOptions",
	     "GTK_PACK_EXPAND", "GTK_FILL_X", "GTK_FILL_Y",
	     "GtkSideType",
	     "GTK_SIDE_TOP", "GTK_SIDE_BOTTOM",
	     "GTK_SIDE_LEFT", "GTK_SIDE_RIGHT",
	     "GtkAnchorType",
	     "GTK_ANCHOR_CENTER", "GTK_ANCHOR_NORTH",
	     "GTK_ANCHOR_NORTH_WEST", "GTK_ANCHOR_NORTH_EAST",
	     "GTK_ANCHOR_SOUTH", "GTK_ANCHOR_SOUTH_WEST",
	     "GTK_ANCHOR_SOUTH_EAST", "GTK_ANCHOR_WEST",
	     "GTK_ANCHOR_EAST", "GTK_ANCHOR_N", "GTK_ANCHOR_NW",
	     "GTK_ANCHOR_NE", "GTK_ANCHOR_S", "GTK_ANCHOR_SW",
	     "GTK_ANCHOR_SE", "GTK_ANCHOR_W", "GTK_ANCHOR_E",
	     "gtk_packer_get_type",
	     "gtk_packer_new",
	     "gtk_packer_add_defaults",
	     "gtk_packer_add",
	     "gtk_packer_set_child_packing",
	     "gtk_packer_reorder_child",
	     "gtk_packer_set_spacing",
	     "gtk_packer_set_default_border_width",
	     "gtk_packer_set_default_pad",
	     "gtk_packer_set_default_ipad"},
    import: {// GtkPaned
	     "struct _GtkPaned",
	     "struct _GtkPanedClass",
	     "gtk_paned_get_type",
	     "gtk_paned_add1",
	     "gtk_paned_add2",
	     "gtk_paned_pack1",
	     "gtk_paned_pack2",
	     "gtk_paned_set_position",
	     "gtk_paned_set_handle_size",
	     "gtk_paned_set_gutter_size",
	     "gtk_paned_compute_position"},
    import: {// GtkPixmap
	     "struct _GtkPixmap",
	     "struct _GtkPixmapClass",
	     "gtk_pixmap_get_type",
	     "gtk_pixmap_new",
	     "gtk_pixmap_set",
	     "gtk_pixmap_get",
	     "gtk_pixmap_set_build_insensitive"},
    import: {// GtkPlug
	     "struct _GtkPlug",
	     "struct _GtkPlugClass",
	     "struct _GtkPlugButton",
	     "gtk_plug_get_type",
	     "gtk_plug_construct",
	     "gtk_plug_new"},
    import: {// GtkPreview
	     "struct _GtkPreview",
	     "struct _GtkPreviewInfo",
	     // "_GtkDitherInfo",
	     "struct _GtkPreviewClass",
	     "gtk_preview_get_type",
	     "gtk_preview_uninit",
	     "gtk_preview_new",
	     "gtk_preview_size",
	     "gtk_preview_put",
	     "gtk_preview_draw_row",
	     "gtk_preview_set_expand",
	     "gtk_preview_set_gamma",
	     "gtk_preview_set_color_cube",
	     "gtk_preview_set_install_cmap",
	     "gtk_preview_set_reserved",
	     "gtk_preview_set_dither",
	     "gtk_preview_get_visual",
	     "gtk_preview_get_cmap",
	     "gtk_preview_get_info",
	     "gtk_preview_reset"},
    import: {// GtkProgress
	     "struct _GtkProgress",
	     "struct _GtkProgressClass",
	     "gtk_progress_get_type",
	     "gtk_progress_set_show_text",
	     "gtk_progress_set_text_alignment",
	     "gtk_progress_set_format_string",
	     "gtk_progress_set_adjustment",
	     "gtk_progress_configure",
	     "gtk_progress_set_percentage",
	     "gtk_progress_set_value",
	     "gtk_progress_get_value",
	     "gtk_progress_set_activity_mode",
	     "gtk_progress_get_current_text",
	     "gtk_progress_get_text_from_value",
	     "gtk_progress_get_current_percentage",
	     "gtk_progress_get_percentage_from_value"},
    import: {// GtkProgressBar
	     "struct _GtkProgressBar",
	     "struct _GtkProgressBarClass",
	     "GtkProgressBarStyle",
	     "GTK_PROGRESS_CONTINUOUS", "GTK_PROGRESS_DISCRETE",
	     "GtkProgressBarOrientation",
	     "GTK_PROGRESS_LEFT_TO_RIGHT", "GTK_PROGRESS_RIGHT_TO_LEFT",
	     "GTK_PROGRESS_BOTTOM_TO_TOP", "GTK_PROGRESS_TOP_TO_BOTTOM",
	     "gtk_progress_bar_get_type",
	     "gtk_progress_bar_new",
	     "gtk_progress_bar_new_with_adjustment",
	     "gtk_progress_bar_set_bar_style",
	     "gtk_progress_bar_set_discrete_blocks",
	     "gtk_progress_bar_set_activity_step",
	     "gtk_progress_bar_set_activity_blocks",
	     "gtk_progress_bar_set_orientation",
	     "gtk_progress_bar_update"},
    import: {// GtkRadioButton
	     "struct _GtkRadioButton",
	     "struct _GtkRadioButtonClass",
	     "gtk_radio_button_get_type",
	     "gtk_radio_button_new",
	     "gtk_radio_button_new_from_widget",
	     "gtk_radio_button_new_with_label",
	     "gtk_radio_button_new_with_label_from_widget",
	     "gtk_radio_button_group",
	     "gtk_radio_button_set_group"},
    import: {// GtkRadioMenuItem
	     "struct _GtkRadioMenuItem",
	     "struct _GtkRadioMenuItemClass",
	     "gtk_radio_menu_item_get_type",
	     "gtk_radio_menu_item_new",
	     "gtk_radio_menu_item_new_with_label",
	     "gtk_radio_menu_item_group",
	     "gtk_radio_menu_item_set_group"},
    import: {// GtkRange
	     "struct _GtkRange",
	     "struct _GtkRangeClass",
	     "gtk_range_get_type",
	     "gtk_range_get_adjustment",
	     "gtk_range_set_update_policy",
	     "gtk_range_set_adjustment",
	     "gtk_range_draw_background",
	     "gtk_range_clear_background",
	     "gtk_range_draw_trough",
	     "gtk_range_draw_slider",
	     "gtk_range_draw_step_forw",
	     "gtk_range_draw_step_back",
	     "gtk_range_slider_update",
	     "gtk_range_trough_click",
	     "gtk_range_default_hslider_update",
	     "gtk_range_default_vslider_update",
	     "gtk_range_default_htrough_click",
	     "gtk_range_default_vtrough_click",
	     "gtk_range_default_hmotion",
	     "gtk_range_default_vmotion"},
    import: {// Gtk Resources
	     "GtkRcFlags",
	     "GTK_RC_FG", "GTK_RC_BG", "GTK_RC_TEXT", "GTK_RC_BASE",
	     "struct _GtkRcStyle",
	     "gtk_rc_init", "gtk_rc_add_default_file",
	     "gtk_rc_set_default_files", "gtk_rc_get_default_files",
	     "gtk_rc_parse", "gtk_rc_parse_string",
	     "gtk_rc_reparse_all", "gtk_rc_get_style",
	     "gtk_rc_add_widget_name_style",
	     "gtk_rc_add_widget_class_style",
	     "gtk_rc_add_class_style",
	     "gtk_rc_style_new", "gtk_rc_style_ref", "gtk_rc_style_unref",
	     "GtkImageLoader",
	     "gtk_rc_set_image_loader", "gtk_rc_load_image",
	     "gtk_rc_find_pixmap_in_path", "gtk_rc_find_module_in_path",
	     "gtk_rc_get_theme_dir", "gtk_rc_get_module_dir",
	     "GtkRcTokenType",
	     "GTK_RC_TOKEN_INVALID", "GTK_RC_TOKEN_INCLUDE",
	     "GTK_RC_TOKEN_NORMAL", "GTK_RC_TOKEN_ACTIVE",
	     "GTK_RC_TOKEN_PRELIGHT", "GTK_RC_TOKEN_SELECTED",
	     "GTK_RC_TOKEN_INSENSITIVE", "GTK_RC_TOKEN_FG",
	     "GTK_RC_TOKEN_BG", "GTK_RC_TOKEN_BASE",
	     "GTK_RC_TOKEN_TEXT", "GTK_RC_TOKEN_FONT",
	     "GTK_RC_TOKEN_FONTSET", "GTK_RC_TOKEN_BG_PIXMAP",
	     "GTK_RC_TOKEN_PIXMAP_PATH", "GTK_RC_TOKEN_STYLE",
	     "GTK_RC_TOKEN_BINDING", "GTK_RC_TOKEN_BIND",
	     "GTK_RC_TOKEN_WIDGET", "GTK_RC_TOKEN_WIDGET_CLASS",
	     "GTK_RC_TOKEN_CLASS", "GTK_RC_TOKEN_LOWEST",
	     "GTK_RC_TOKEN_GTK", "GTK_RC_TOKEN_APPLICATION",
	     "GTK_RC_TOKEN_RC", "GTK_RC_TOKEN_HIGHEST",
	     "GTK_RC_TOKEN_ENGINE", "GTK_RC_TOKEN_MODULE_PATH",
	     "GTK_RC_TOKEN_LAST",
	     "gtk_rc_parse_color", "gtk_rc_parse_state",
	     "gtk_rc_parse_priority"},
    import: {// GtkRuler
	     "struct _GtkRuler",
	     "struct _GtkRulerClass",
	     "struct _GtkRulerMetric",
	     "gtk_ruler_get_type",
	     "gtk_ruler_set_metric",
	     "gtk_ruler_set_range",
	     "gtk_ruler_draw_ticks",
	     "gtk_ruler_draw_pos"},
    import: {// GtkScale
	     "struct _GtkScale",
	     "struct _GtkScaleClass",
	     "gtk_scale_get_type",
	     "gtk_scale_set_digits",
	     "gtk_scale_set_draw_value",
	     "gtk_scale_set_value_pos",
	     "gtk_scale_get_value_width",
	     "gtk_scale_draw_value"},
    import: {// GtkScrollbar
	     "struct _GtkScrollbar",
	     "struct _GtkScrollbarClass",
	     "gtk_scrollbar_get_type"},
    import: {// GtkScrolledWindow
	     "struct _GtkScrolledWindow",
	     "struct _GtkScrolledWindowClass",
	     "gtk_scrolled_window_get_type",
	     "gtk_scrolled_window_new",
	     "gtk_scrolled_window_set_hadjustment",
	     "gtk_scrolled_window_set_vadjustment",
	     "gtk_scrolled_window_get_hadjustment",
	     "gtk_scrolled_window_get_vadjustment",
	     "gtk_scrolled_window_set_policy",
	     "gtk_scrolled_window_set_placement",
	     "gtk_scrolled_window_add_with_viewport"},
    import: {// Selection
	     "struct _GtkSelectionData",
	     "struct _GtkTargetList",
	     "struct _GtkTargetEntry",
	     "struct _GtkTargetPair",
	     "gtk_target_list_new",
	     "gtk_target_list_ref",
	     "gtk_target_list_unref",
	     "gtk_target_list_add",
	     "gtk_target_list_add_table",
	     "gtk_target_list_remove",
	     "gtk_target_list_find",
	     "gtk_selection_owner_set",
	     "gtk_selection_add_target",
	     "gtk_selection_add_targets",
	     "gtk_selection_convert",
	     "gtk_selection_data_set",
	     "gtk_selection_remove_all",
	     "gtk_selection_clear",
	     "gtk_selection_request",
	     "gtk_selection_incr_event",
	     "gtk_selection_notify",
	     "gtk_selection_property_notify",
	     "gtk_selection_data_copy",
	     "gtk_selection_data_free"},
    import: {// GtkSeparator
	     "struct _GtkSeparator",
	     "struct _GtkSeparatorClass",
	     "gtk_separator_get_type"},
    import: {// Signals
	     "GtkSignalMarshal", "GtkSignalDestroy",
	     "GtkEmissionHook",
	     "struct _GtkSignalQuery",
	     "gtk_signal_init",
	     "gtk_signal_new",
	     "gtk_signal_newv",
	     "gtk_signal_lookup",
	     "gtk_signal_name",
	     "gtk_signal_emit",
	     "gtk_signal_emit_by_name",
	     "gtk_signal_emitv",
	     "gtk_signal_emitv_by_name",
	     "gtk_signal_n_emissions",
	     "gtk_signal_n_emissions_by_name",
	     "gtk_signal_emit_stop",
	     "gtk_signal_emit_stop_by_name",
	     "gtk_signal_connect",
	     "gtk_signal_connect_after",
	     "gtk_signal_connect_object",
	     "gtk_signal_connect_object_after",
	     "gtk_signal_connect_full",
	     "gtk_signal_connect_object_while_alive",
	     "gtk_signal_connect_while_alive",
	     "gtk_signal_disconnect",
	     "gtk_signal_disconnect_by_data",
	     "gtk_signal_handler_block",
	     "gtk_signal_handler_block_by_func",
	     "gtk_signal_handler_block_by_data",
	     "gtk_signal_handler_unblock",
	     "gtk_signal_handler_unblock_by_func",
	     "gtk_signal_handler_unblock_by_data",
	     "gtk_signal_handler_pending",
	     "gtk_signal_handler_pending_by_func",
	     "gtk_signal_handlers_destroy",
	     "gtk_signal_add_emission_hook",
	     "gtk_signal_add_emission_hook_full",
	     "gtk_signal_remove_emission_hook",
	     "gtk_signal_set_funcs",
	     "gtk_signal_query"},
    import: {// GtkSocket
	     "struct _GtkSocket",
	     "struct _GtkSocketClass",
	     "gtk_socket_new",
	     "gtk_socket_get_type",
	     "gtk_socket_steal"},
    import: {// Gtk
	     "GtkSpinButtonUpdatePolicy",
	     "GTK_UPDATE_ALWAYS", "GTK_UPDATE_IF_VALID",
	     "GtkSpinType",
	     "GTK_SPIN_STEP_FORWARD", "GTK_SPIN_STEP_BACKWARD",
	     "GTK_SPIN_PAGE_FORWARD", "GTK_SPIN_PAGE_BACKWARD",
	     "GTK_SPIN_HOME", "GTK_SPIN_END",
	     "GTK_SPIN_USER_DEFINED",
	     "struct _GtkSpinButton",
	     "struct _GtkSpinButtonClass",
	     "gtk_spin_button_get_type",
	     "gtk_spin_button_configure",
	     "gtk_spin_button_new",
	     "gtk_spin_button_set_adjustment",
	     "gtk_spin_button_get_adjustment",
	     "gtk_spin_button_set_digits",
	     "gtk_spin_button_get_value_as_float",
	     "gtk_spin_button_get_value_as_int",
	     "gtk_spin_button_set_value",
	     "gtk_spin_button_set_update_policy",
	     "gtk_spin_button_set_numeric",
	     "gtk_spin_button_spin",
	     "gtk_spin_button_set_wrap",
	     "gtk_spin_button_set_shadow_type",
	     "gtk_spin_button_set_snap_to_ticks",
	     "gtk_spin_button_update"},
    import: {// GtkStatusbar
	     "struct _GtkStatusbar",
	     "struct _GtkStatusbarClass",
	     "struct _GtkStatusbarMsg",
	     "gtk_statusbar_get_type",
	     "gtk_statusbar_new",
	     "gtk_statusbar_get_context_id",
	     "gtk_statusbar_push",
	     "gtk_statusbar_pop",
	     "gtk_statusbar_remove"},
    import: {// GtkStyle
	     "struct _GtkStyle",
	     "struct _GtkStyleClass",
	     "gtk_style_new",
	     "gtk_style_copy",
	     "gtk_style_attach",
	     "gtk_style_detach",
	     "gtk_style_ref",
	     "gtk_style_unref",
	     "gtk_style_set_background",
	     "gtk_style_apply_default_background",
	     "gtk_draw_hline",
	     "gtk_draw_vline",
	     "gtk_draw_shadow",
	     "gtk_draw_polygon",
	     "gtk_draw_arrow",
	     "gtk_draw_diamond",
	     "gtk_draw_oval",
	     "gtk_draw_string",
	     "gtk_draw_box",
	     "gtk_draw_flat_box",
	     "gtk_draw_check",
	     "gtk_draw_option",
	     "gtk_draw_cross",
	     "gtk_draw_ramp",
	     "gtk_draw_tab",
	     "gtk_draw_shadow_gap",
	     "gtk_draw_box_gap",
	     "gtk_draw_extension",
	     "gtk_draw_focus",
	     "gtk_draw_slider",
	     "gtk_draw_handle",
	     "gtk_paint_hline",
	     "gtk_paint_vline",
	     "gtk_paint_shadow",
	     "gtk_paint_polygon",
	     "gtk_paint_arrow",
	     "gtk_paint_diamond",
	     "gtk_paint_oval",
	     "gtk_paint_string",
	     "gtk_paint_box",
	     "gtk_paint_flat_box",
	     "gtk_paint_check",
	     "gtk_paint_option",
	     "gtk_paint_cross",
	     "gtk_paint_ramp",
	     "gtk_paint_tab",
	     "gtk_paint_shadow_gap",
	     "gtk_paint_box_gap",
	     "gtk_paint_extension",
	     "gtk_paint_focus",
	     "gtk_paint_slider",
	     "gtk_paint_handle"},
    import: {// GtkTable
	     "struct _GtkTable",
	     "struct _GtkTableClass",
	     "struct _GtkTableChild",
	     "struct _GtkTableRowCol",
	     "gtk_table_get_type",
	     "gtk_table_new",
	     "gtk_table_resize",
	     "gtk_table_attach",
	     "gtk_table_attach_defaults",
	     "gtk_table_set_row_spacing",
	     "gtk_table_set_col_spacing",
	     "gtk_table_set_row_spacings",
	     "gtk_table_set_col_spacings",
	     "gtk_table_set_homogeneous"},
    import: {// GtkTearoffMenuItem
	     "struct _GtkTearoffMenuItem",
	     "struct _GtkTearoffMenuItemClass",
	     "gtk_tearoff_menu_item_get_type",
	     "gtk_tearoff_menu_item_new"},
    import: {// GtkText
	     "struct _GtkTextFont",
	     "struct _GtkPropertyMark",
	     "struct _GtkText",
	     "struct _GtkTextClass",
	     "gtk_text_get_type",
	     "gtk_text_new",
	     "gtk_text_set_editable",
	     "gtk_text_set_word_wrap",
	     "gtk_text_set_line_wrap",
	     "gtk_text_set_adjustments",
	     "gtk_text_set_point",
	     "gtk_text_get_point",
	     "gtk_text_get_length",
	     "gtk_text_freeze",
	     "gtk_text_thaw",
	     "gtk_text_insert",
	     "gtk_text_backward_delete",
	     "gtk_text_forward_delete"},
//    import: {// GtkThemeEngine
//	     "struct _GtkThemeEngine",
//	     "gtk_theme_engine_get",
//	     "gtk_theme_engine_ref",
//	     "gtk_theme_engine_unref",
//	     "gtk_themes_init",
//	     "gtk_themes_exit"},
    import: {// GtkTipsQuery
	     "struct _GtkTipsQuery",
	     "struct _GtkTipsQueryClass",
	     "gtk_tips_query_get_type",
	     "gtk_tips_query_new",
	     "gtk_tips_query_start_query",
	     "gtk_tips_query_stop_query",
	     "gtk_tips_query_set_caller",
	     "gtk_tips_query_set_labels"},
    import: {// GtkToggleButton
	     "struct _GtkToggleButton",
	     "struct _GtkToggleButtonClass",
	     "gtk_toggle_button_get_type",
	     "gtk_toggle_button_new",
	     "gtk_toggle_button_new_with_label",
	     "gtk_toggle_button_set_mode",
	     "gtk_toggle_button_set_active",
	     "gtk_toggle_button_toggled"},
    import: {// GtkToolbar
	     "GtkToolbarChildType",
	     "GTK_TOOLBAR_CHILD_SPACE", "GTK_TOOLBAR_CHILD_BUTTON",
	     "GTK_TOOLBAR_CHILD_TOGGLEBUTTON",
	     "GTK_TOOLBAR_CHILD_RADIOBUTTON", "GTK_TOOLBAR_CHILD_WIDGET",
	     "GtkToolbarSpaceStyle",
	     "GTK_TOOLBAR_SPACE_EMPTY", "GTK_TOOLBAR_SPACE_LINE",
	     "struct _GtkToolbarChild",
	     "struct _GtkToolbar",
	     "struct _GtkToolbarClass",
	     "gtk_toolbar_get_type",
	     "gtk_toolbar_new",
	     "gtk_toolbar_append_item",
	     "gtk_toolbar_prepend_item",
	     "gtk_toolbar_insert_item",
	     "gtk_toolbar_append_space",
	     "gtk_toolbar_prepend_space",
	     "gtk_toolbar_insert_space",
	     "gtk_toolbar_append_widget",
	     "gtk_toolbar_prepend_widget",
	     "gtk_toolbar_insert_widget",
	     "gtk_toolbar_set_orientation",
	     "gtk_toolbar_set_style",
	     "gtk_toolbar_set_space_size",
	     "gtk_toolbar_set_space_style",
	     "gtk_toolbar_set_tooltips",
	     "gtk_toolbar_set_button_relief"},
    import: {// GtkTooltips
	     "struct _GtkTooltips",
	     "struct _GtkTooltipsClass",
	     "struct _GtkTooltipsData",
	     "gtk_tooltips_get_type",
	     "gtk_tooltips_new",
	     "gtk_tooltips_enable",
	     "gtk_tooltips_disable",
	     "gtk_tooltips_set_delay",
	     "gtk_tooltips_set_tip",
	     "gtk_tooltips_set_colors",
	     "gtk_tooltips_data_get",
	     "gtk_tooltips_force_window"},
    import: {// GtkTree
	     "GtkTreeViewMode",
	     "GTK_TREE_VIEW_LINE", "GTK_TREE_VIEW_ITEM",
	     "struct _GtkTree",
	     "struct _GtkTreeClass",
	     "gtk_tree_get_type", "gtk_tree_new",
	     "gtk_tree_append",
	     "gtk_tree_prepend",
	     "gtk_tree_insert",
	     "gtk_tree_remove_items",
	     "gtk_tree_clear_items",
	     "gtk_tree_select_item",
	     "gtk_tree_unselect_item",
	     "gtk_tree_select_child",
	     "gtk_tree_unselect_child",
	     "gtk_tree_child_position",
	     "gtk_tree_set_selection_mode",
	     "gtk_tree_set_view_mode",
	     "gtk_tree_remove_item"},
    import: {// GtkTreeItem
	     "struct _GtkTreeItem",
	     "struct _GtkTreeItemClass",
	     "gtk_tree_item_get_type",
	     "gtk_tree_item_new",
	     "gtk_tree_item_new_with_label",
	     "gtk_tree_item_set_subtree",
	     "gtk_tree_item_remove_subtree",
	     "gtk_tree_item_select",
	     "gtk_tree_item_deselect",
	     "gtk_tree_item_expand",
	     "gtk_tree_item_collapse"},
    import: {// GtkVButtonBox
	     "struct _GtkVButtonBox",
	     "struct _GtkVButtonBoxClass",
	     "gtk_vbutton_box_get_type",
	     "gtk_vbutton_box_new",
	     "gtk_vbutton_box_get_spacing_default",
	     "gtk_vbutton_box_set_spacing_default",
	     "gtk_vbutton_box_get_layout_default",
	     "gtk_vbutton_box_set_layout_default"},
    import: {// GtkVBox
	     "struct _GtkVBox",
	     "struct _GtkVBoxClass",
	     "gtk_vbox_get_type",
	     "gtk_vbox_new"},
    import: {// GtkViewport
	     "struct _GtkViewport",
	     "struct _GtkViewportClass",
	     "gtk_viewport_get_type",
	     "gtk_viewport_new",
	     "gtk_viewport_get_hadjustment",
	     "gtk_viewport_get_vadjustment",
	     "gtk_viewport_set_hadjustment",
	     "gtk_viewport_set_vadjustment",
	     "gtk_viewport_set_shadow_type"},
    import: {// GtkVPaned
	     "struct _GtkVPaned",
	     "struct _GtkVPanedClass",
	     "gtk_vpaned_get_type",
	     "gtk_vpaned_new"},
    import: {// GtkVRuler
	     "struct _GtkVRuler",
	     "struct _GtkVRulerClass",
	     "gtk_vruler_get_type",
	     "gtk_vruler_new"},
    import: {// GtkVScale
	     "struct _GtkVScale",
	     "struct _GtkVScaleClass",
	     "gtk_vscale_get_type",
	     "gtk_vscale_new"},
    import: {// GtkVScrollbar
	     "struct _GtkVScrollbar",
	     "struct _GtkVScrollbarClass",
	     "gtk_vscrollbar_get_type",
	     "gtk_vscrollbar_new"},
    import: {// GtkVSeparator
	     "struct _GtkVSeparator",
	     "struct _GtkVSeparatorClass",
	     "gtk_vseparator_get_type",
	     "gtk_vseparator_new"},
    import: {// GtkWidget
	     "GtkWidgetFlags",
	     "GTK_TOPLEVEL", "GTK_NO_WINDOW", "GTK_REALIZED",
	     "GTK_MAPPED", "GTK_VISIBLE", "GTK_SENSITIVE",
	     "GTK_PARENT_SENSITIVE", "GTK_CAN_FOCUS",
	     "GTK_HAS_FOCUS", "GTK_CAN_DEFAULT", "GTK_HAS_DEFAULT",
	     "GTK_HAS_GRAB", "GTK_RC_STYLE", "GTK_COMPOSITE_CHILD",
	     "GTK_NO_REPARENT", "GTK_APP_PAINTABLE",
	     "struct _GtkRequisition",
	     "struct _GtkAllocation",
	     "struct _GtkSelectionData",
	     "struct _GtkWidget",
	     "struct _GtkWidgetClass",
	     "struct _GtkWidgetAuxInfo",
	     "struct _GtkWidgetShapeInfo",
	     "GtkCallback",
	     "gtk_widget_get_type",
	     "gtk_widget_new",
	     "gtk_widget_newv",
	     "gtk_widget_ref",
	     "gtk_widget_unref",
	     "gtk_widget_destroy",
	     "gtk_widget_destroyed",
	     "gtk_widget_get",
	     "gtk_widget_getv",
	     "gtk_widget_set",
	     "gtk_widget_setv",
	     "gtk_widget_unparent",
	     "gtk_widget_show",
	     "gtk_widget_show_now",
	     "gtk_widget_hide",
	     "gtk_widget_show_all",
	     "gtk_widget_hide_all",
	     "gtk_widget_map",
	     "gtk_widget_unmap",
	     "gtk_widget_realize",
	     "gtk_widget_unrealize",
	     "gtk_widget_queue_draw",
	     "gtk_widget_queue_draw_area",
	     "gtk_widget_queue_clear",
	     "gtk_widget_queue_clear_area",
	     "gtk_widget_queue_resize",
	     "gtk_widget_draw",
	     "gtk_widget_draw_focus",
	     "gtk_widget_draw_default",
	     "gtk_widget_size_request",
	     "gtk_widget_add_accelerator",
	     "gtk_widget_remove_accelerator",
	     "gtk_widget_remove_accelerators",
	     "gtk_widget_accelerator_signal",
	     "gtk_widget_lock_accelerators",
	     "gtk_widget_unlock_accelerators",
	     "gtk_widget_event",
	     "gtk_widget_popup",
	     "gtk_widget_intersect",
	     "gtk_widget_grab_focus",
	     "gtk_widget_grab_default",
	     "gtk_widget_set_name",
	     "gtk_widget_get_name",
	     "gtk_widget_set_state",
	     "gtk_widget_set_sensitive",
	     "gtk_widget_set_app_paintable",
	     "gtk_widget_set_parent",
	     "gtk_widget_set_parent_window",
	     "gtk_widget_set_uposition",
	     "gtk_widget_set_events",
	     "gtk_widget_add_events",
	     "gtk_widget_set_extension_events",
	     "gtk_widget_get_extension_events",
	     "gtk_widget_get_toplevel",
	     "gtk_widget_get_ancestor",
	     "gtk_widget_get_colormap",
	     "gtk_widget_get_visual",
	     "gtk_widget_get_events",
	     "gtk_widget_get_pointer",
	     "gtk_widget_is_ancestor",
	     "gtk_widget_hide_on_delete",
	     "gtk_widget_set_style",
	     "gtk_widget_set_rc_style",
	     "gtk_widget_ensure_style",
	     "gtk_widget_get_style",
	     "gtk_widget_restore_default_style",
	     "gtk_widget_modify_style",
	     "gtk_widget_set_composite_name",
	     "gtk_widget_get_composite_name",
	     "gtk_widget_reset_rc_styles",
	     "gtk_widget_push_style",
	     "gtk_widget_push_colormap",
	     "gtk_widget_push_visual",
	     "gtk_widget_push_composite_child",
	     "gtk_widget_pop_composite_child",
	     "gtk_widget_pop_style",
	     "gtk_widget_pop_colormap",
	     "gtk_widget_pop_visual",
	     "gtk_widget_set_default_style",
	     "gtk_widget_set_default_colormap",
	     "gtk_widget_set_default_visual",
	     "gtk_widget_get_default_style",
	     "gtk_widget_get_default_colormap",
	     "gtk_widget_get_default_visual",
	     "gtk_widget_shape_combine_mask",
	     "gtk_widget_reset_shapes",
	     "gtk_widget_path"},
    import: {// GtkWindow
	     "struct _GtkWindow",
	     "struct _GtkWindowClass",
	     "gtk_window_get_type",
	     "gtk_window_new",
	     "gtk_window_set_title",
	     "gtk_window_set_wmclass",
	     "gtk_window_set_focus",
	     "gtk_window_set_default",
	     "gtk_window_set_policy",
	     "gtk_window_add_accel_group",
	     "gtk_window_remove_accel_group",
	     "gtk_window_set_position",
	     "gtk_window_activate_focus",
	     "gtk_window_activate_default",
	     "gtk_window_set_transient_for",
	     "gtk_window_set_geometry_hints",
	     "gtk_window_set_default_size",
	     "gtk_window_set_modal",
	     "gtk_window_remove_embedded_xid",
	     "gtk_window_add_embedded_xid"},

    equate: {"char*" => <c-string>,
	     "gchar*" => <c-string>},

    map: {"char*" => <byte-string>,
	  "gchar*" => <byte-string>,
	  "GtkSignalFunc" => <function>};
  
  pointer "char**" => <c-string-vector>,
    superclasses: {<c-vector>};

  variable "gtk_major_version", read-only: #t;
  variable "gtk_minor_version", read-only: #t;
  variable "gtk_micro_version", read-only: #t;
  variable "gtk_binary_age", read-only: #t;
  variable "gtk_interface_age", read-only: #t;
  
  struct "struct _GtkObject";
  struct "struct _GtkWidget",
    superclasses: {<gtk-object>};
  struct "struct _GtkMisc",
    superclasses: {<gtk-widget>};
  struct "struct _GtkLabel",
    superclasses: {<gtk-misc>};
  struct "struct _GtkAccelLabel",
    superclasses: {<gtk-label>};
  struct "struct _GtkTipsQuery",
    superclasses: {<gtk-label>};
  struct "struct _GtkArrow",
    superclasses: {<gtk-misc>};
  struct "struct _GtkImage",
    superclasses: {<gtk-misc>};
  struct "struct _GtkPixmap",
    superclasses: {<gtk-misc>};
  struct "struct _GtkContainer",
    superclasses: {<gtk-widget>};
  struct "struct _GtkBin",
    superclasses: {<gtk-container>};
  struct "struct _GtkEventBox",
    superclasses: {<gtk-bin>};
  struct "struct _GtkAlignment",
    superclasses: {<gtk-bin>};
  struct "struct _GtkFrame",
    superclasses: {<gtk-bin>};
  struct "struct _GtkAspectFrame",
    superclasses: {<gtk-frame>},
    rename: {"ratio" => gtk-ratio};
  struct "struct _GtkButton",
    superclasses: {<gtk-bin>};
  struct "struct _GtkToggleButton",
    superclasses: {<gtk-button>};
  struct "struct _GtkHandleBox",
    superclasses: {<gtk-bin>};
  struct "struct _GtkCheckButton",
    superclasses: {<gtk-toggle-button>};
  struct "struct _GtkRadioButton",
    superclasses: {<gtk-check-button>};
  struct "struct _GtkOptionMenu",
    superclasses: {<gtk-button>};
  struct "struct _GtkItem",
    superclasses: {<gtk-bin>};
  struct "struct _GtkMenuItem",
    superclasses: {<gtk-item>};
  struct "struct _GtkCheckMenuItem",
    superclasses: {<gtk-menu-item>};
  struct "struct _GtkRadioMenuItem",
    superclasses: {<gtk-check-menu-item>};
  struct "struct _GtkTearoffMenuItem",
    superclasses: {<gtk-menu-item>};
  struct "struct _GtkListItem",
    superclasses: {<gtk-item>};
  struct "struct _GtkTreeItem",
    superclasses: {<gtk-item>};
  struct "struct _GtkWindow",
    superclasses: {<gtk-bin>};
  struct "struct _GtkScrolledWindow",
    superclasses: {<gtk-bin>};
  struct "struct _GtkViewport",
    superclasses: {<gtk-bin>};
  struct "struct _GtkColorSelectionDialog",
    superclasses: {<gtk-window>};
  struct "struct _GtkDialog",
    superclasses: {<gtk-window>};
  struct "struct _GtkInputDialog",
    superclasses: {<gtk-dialog>};
  struct "struct _GtkFileSelection",
    superclasses: {<gtk-window>};
  struct "struct _GtkFontSelectionDialog",
    superclasses: {<gtk-window>};
  struct "struct _GtkPlug",
    superclasses: {<gtk-window>};
  struct "struct _GtkBox",
    superclasses: {<gtk-container>};
  struct "struct _GtkButtonBox",
    superclasses: {<gtk-box>};
  struct "struct _GtkHButtonBox",
    superclasses: {<gtk-button-box>};
  struct "struct _GtkVButtonBox",
    superclasses: {<gtk-button-box>};
  struct "struct _GtkVBox",
    superclasses: {<gtk-box>};
  struct "struct _GtkColorSelection",
    superclasses: {<gtk-v-box>},
    rename: {"values" => gtk-values};
  struct "struct _GtkGammaCurve",
    superclasses: {<gtk-v-box>};
  struct "struct _GtkHBox",
    superclasses: {<gtk-box>};
  struct "struct _GtkCombo",
    superclasses: {<gtk-h-box>},
    rename: {"list" => gtk-list};
  struct "struct _GtkStatusbar",
    superclasses: {<gtk-h-box>};
  struct "struct _GtkCList",
    superclasses: {<gtk-container>};
  struct "struct _GtkCTree",
    superclasses: {<gtk-c-list>};
  struct "struct _GtkFixed",
    superclasses: {<gtk-container>};
  struct "struct _GtkNotebook",
    superclasses: {<gtk-container>};
  struct "struct _GtkFontSelection",
    superclasses: {<gtk-notebook>};
  struct "struct _GtkPaned",
    superclasses: {<gtk-container>};
  struct "struct _GtkHPaned",
    superclasses: {<gtk-paned>};
  struct "struct _GtkVPaned",
    superclasses: {<gtk-paned>};
  struct "struct _GtkList",
    superclasses: {<gtk-container>};
  struct "struct _GtkLayout",
    superclasses: {<gtk-container>};
  struct "struct _GtkMenuShell",
    superclasses: {<gtk-container>};
  struct "struct _GtkMenuBar",
    superclasses: {<gtk-menu-shell>};
  struct "struct _GtkMenu",
    superclasses: {<gtk-menu-shell>};
  struct "struct _GtkPacker",
    superclasses: {<gtk-container>};
  struct "struct _GtkTable",
    superclasses: {<gtk-container>};
  struct "struct _GtkToolbar",
    superclasses: {<gtk-container>};
  struct "struct _GtkTree",
    superclasses: {<gtk-container>};
  struct "struct _GtkCalendar",
    superclasses: {<gtk-widget>};
  struct "struct _GtkDrawingArea",
    superclasses: {<gtk-widget>};
  struct "struct _GtkCurve",
    superclasses: {<gtk-drawing-area>},
    rename: {"last" => gtk-last};
  struct "struct _GtkEditable",
    superclasses: {<gtk-widget>};
  struct "struct _GtkEntry",
    superclasses: {<gtk-editable>};
  struct "struct _GtkSpinButton",
    superclasses: {<gtk-entry>};
  struct "struct _GtkText",
    superclasses: {<gtk-editable>};
  struct "struct _GtkRuler",
    superclasses: {<gtk-widget>};
  struct "struct _GtkHRuler",
    superclasses: {<gtk-ruler>};
  struct "struct _GtkVRuler",
    superclasses: {<gtk-ruler>};
  struct "struct _GtkRange",
    superclasses: {<gtk-widget>};
  struct "struct _GtkScale",
    superclasses: {<gtk-range>},
    rename: {"range" => gtk-range};
  struct "struct _GtkHScale",
    superclasses: {<gtk-scale>};
  struct "struct _GtkVScale",
    superclasses: {<gtk-scale>};
  struct "struct _GtkScrollbar",
    superclasses: {<gtk-range>},
    rename: {"range" => gtk-range};
  struct "struct _GtkHScrollbar",
    superclasses: {<gtk-scrollbar>};
  struct "struct _GtkVScrollbar",
    superclasses: {<gtk-scrollbar>};
  struct "struct _GtkSeparator",
    superclasses: {<gtk-widget>};
  struct "struct _GtkHSeparator",
    superclasses: {<gtk-separator>};
  struct "struct _GtkVSeparator",
    superclasses: {<gtk-separator>};
  struct "struct _GtkPreview",
    superclasses: {<gtk-widget>};
  struct "struct _GtkProgress",
    superclasses: {<gtk-widget>};
  struct "struct _GtkProgressBar",
    superclasses: {<gtk-progress>};
  struct "struct _GtkData",
    superclasses: {<gtk-object>};
  struct "struct _GtkAdjustment",
    superclasses: {<gtk-data>};
  struct "struct _GtkTooltips",
    superclasses: {<gtk-data>};
  struct "struct _GtkItemFactory",
    superclasses: {<gtk-object>};

  struct "struct _GtkCListRow",
    rename: {"destroy" => gtk-destroy};
  struct "struct _GtkCTreeNode",
    rename: {"list" => gtk-list};
  struct "struct _GtkTargetList",
    rename: {"list" => gtk-list};

  struct "struct _GtkObjectClass",
    rename: {"destroy" => gtk-destroy};
  struct "struct _GtkWidgetClass",
    rename: {"map" => gtk-map};
  struct "struct _GtkContainerClass",
    rename: {"add" => gtk-add, "remove" => gtk-remove};
  struct "struct _GtkItemClass",
    rename: {"select" => gtk-select, "deselect" => gtk-deselect};
  struct "struct _GtkItemFactoryClass",
    rename: {"object_class" => gtk-object-class};

  function "gtk_init",
    input-output-argument: 1,
    input-output-argument: 2;
  // The following is a workaround until we can interface with the
  // GTK+ type system
  function "gtk_arg_new", map-result: <gtk-arg>;
  function "gtk_object_new", map-result: <gtk-object>;
  function "gtk_object_newv", map-result: <gtk-object>;
  function "gtk_accel_group_new", map-result: <gtk-accel-group>;
  function "gtk_accel_label_new", map-result: <gtk-accel-label>;
  function "gtk_adjustment_new", map-result: <gtk-adjustment>;
  function "gtk_alignment_new", map-result: <gtk-alignment>;
  function "gtk_arrow_new", map-result: <gtk-arrow>;
  function "gtk_aspect_frame_new", map-result: <gtk-aspect-frame>;
  function "gtk_binding_set_new", map-result: <gtk-binding-set>;
  function "gtk_button_new", map-result: <gtk-button>;
  function "gtk_button_new_with_label", map-result: <gtk-button>;
  function "gtk_calendar_new", map-result: <gtk-calendar>;
  function "gtk_check_button_new", map-result: <gtk-check-button>;
  function "gtk_check_button_new_with_label",
    map-result: <gtk-check-button>;
  function "gtk_check_menu_item_new",
    map-result: <gtk-check-menu-item>;
  function "gtk_check_menu_item_new_with_label",
    map-result: <gtk-check-menu-item>;
  function "gtk_clist_new", map-result: <gtk-c-list>;
  function "gtk_clist_new_with_titles", map-result: <gtk-c-list>;
  function "gtk_color_selection_new", map-result: <gtk-color-selection>;
  function "gtk_color_selection_dialog_new",
    map-result: <gtk-color-selection-dialog>;
  function "gtk_combo_new", map-result: <gtk-combo>;
  function "gtk_ctree_new_with_titles", map-result: <gtk-c-tree>;
  function "gtk_ctree_new", map-result: <gtk-c-tree>;
  function "gtk_curve_new", map-result: <gtk-curve>;
  function "gtk_dialog_new", map-result: <gtk-dialog>;
  function "gtk_drawing_area_new", map-result: <gtk-drawing-area>;
  function "gtk_entry_new", map-result: <gtk-entry>;
  function "gtk_entry_new_with_max_length", map-result:  <gtk-entry>;
  function "gtk_event_box_new", map-result: <gtk-event-box>;
  function "gtk_file_selection_new", map-result: <gtk-file-selection>;
  function "gtk_fixed_new", map-result: <gtk-fixed>;
  function "gtk_font_selection_new", map-result: <gtk-font-selection>;
  function "gtk_font_selection_dialog_new", 
    map-result: <gtk-font-selection-dialog>;
  function "gtk_frame_new", map-result: <gtk-frame>;
  function "gtk_gamma_curve_new", map-result: <gtk-gamma-curve>;
  function "gtk_handle_box_new", map-result: <gtk-handle-box>;
  function "gtk_hbutton_box_new", map-result: <gtk-h-button-box>;
  function "gtk_hbox_new", map-result: <gtk-h-box>;
  function "gtk_hpaned_new", map-result: <gtk-h-paned>;
  function "gtk_hruler_new", map-result: <gtk-h-ruler>;
  function "gtk_hscale_new", map-result: <gtk-h-scale>;
  function "gtk_hscrollbar_new", map-result: <gtk-h-scrollbar>;
  function "gtk_hseparator_new", map-result: <gtk-h-separator>;
  function "gtk_image_new", map-result: <gtk-image>;
  function "gtk_input_dialog_new", map-result: <gtk-input-dialog>;
  function "gtk_item_factory_new", map-result: <gtk-item-factory>;
  function "gtk_label_new", map-result: <gtk-label>;
  function "gtk_layout_new", map-result: <gtk-layout>;
  function "gtk_list_new", map-result: <gtk-list>;
  function "gtk_list_item_new", map-result: <gtk-list-item>;
  function "gtk_list_item_new_with_label", map-result: <gtk-list-item>;
  function "gtk_menu_new", map-result: <gtk-menu>;
  function "gtk_menu_bar_new", map-result: <gtk-menu-bar>;
  function "gtk_menu_factory_new", map-result: <gtk-menu-factory>;
  function "gtk_menu_item_new", map-result: <gtk-menu-item>;
  function "gtk_menu_item_new_with_label", map-result: <gtk-menu-item>;
  function "gtk_notebook_new", map-result: <gtk-notebook>;
  function "gtk_option_menu_new", map-result: <gtk-option-menu>;
  function "gtk_packer_new", map-result: <gtk-packer>;
  function "gtk_pixmap_new", map-result: <gtk-pixmap>;
  function "gtk_plug_new", map-result: <gtk-plug>;
  function "gtk_preview_new", map-result: <gtk-preview>;
  function "gtk_progress_bar_new", map-result: <gtk-progress-bar>;
  function "gtk_progress_bar_new_with_adjustment", 
    map-result: <gtk-progress-bar>;
  function "gtk_radio_button_new", map-result: <gtk-radio-button>;
  function "gtk_radio_button_new_from_widget",
    map-result: <gtk-radio-button>;
  function "gtk_radio_button_new_with_label",
    map-result: <gtk-radio-button>;
  function "gtk_radio_button_new_with_label_from_widget", 
    map-result: <gtk-radio-button>;
  function "gtk_radio_menu_item_new", map-result: <gtk-radio-menu-item>;
  function "gtk_radio_menu_item_new_with_label", 
    map-result: <gtk-radio-menu-item>;
  function "gtk_rc_style_new", map-result: <gtk-rc-style>;
  function "gtk_scrolled_window_new", map-result: <gtk-scrolled-window>;
  function "gtk_target_list_new", map-result: <gtk-target-list>;
  function "gtk_socket_new", map-result: <gtk-socket>;
  function "gtk_spin_button_new", map-result: <gtk-spin-button>;
  function "gtk_statusbar_new", map-result: <gtk-statusbar>;
  function "gtk_style_new", map-result: <gtk-style>;
  function "gtk_table_new", map-result: <gtk-table>;
  function "gtk_tearoff_menu_item_new",
    map-result: <gtk-tearoff-menu-item>;
  function "gtk_text_new", map-result: <gtk-text>;
  function "gtk_tips_query_new", map-result: <gtk-tips-query>;
  function "gtk_toggle_button_new", map-result: <gtk-toggle-button>;
  function "gtk_toggle_button_new_with_label", 
    map-result: <gtk-toggle-button>;
  function "gtk_toolbar_new", map-result: <gtk-toolbar>;
  function "gtk_tooltips_new", map-result: <gtk-tooltips>;
  function "gtk_tree_new", map-result: <gtk-tree>;
  function "gtk_tree_item_new", map-result: <gtk-tree-item>;
  function "gtk_tree_item_new_with_label", map-result: <gtk-tree-item>;
  function "gtk_vbutton_box_new", map-result: <gtk-v-button-box>;
  function "gtk_vbox_new", map-result: <gtk-v-box>;
  function "gtk_viewport_new", map-result: <gtk-viewport>;
  function "gtk_vpaned_new", map-result: <gtk-v-paned>;
  function "gtk_vruler_new", map-result: <gtk-v-ruler>;
  function "gtk_vscale_new", map-result: <gtk-v-scale>;
  function "gtk_vscrollbar_new", map-result: <gtk-v-scrollbar>;
  function "gtk_vseparator_new", map-result: <gtk-v-separator>;
  function "gtk_widget_new", map-result: <gtk-widget>;
  function "gtk_widget_newv", map-result: <gtk-widget>;
  
  function "gtk_window_new", map-result: <gtk-window>;
end;

define method export-value(cls == <GtkSignalFunc>, value :: <function>) => (result :: <function-pointer>);
  make(<function-pointer>, pointer: value.callback-entry); 
end method export-value;

define method import-value(cls == <function>, value :: <GtkSignalFunc>) => (result :: <function>);
  error("Is this possible?");
end method import-value;

// Another stupid workaround. Sometimes we need to access mapped types
// as pointers, and Melange doesn't provide any way to do so.
define sealed functional class <c-pointer-vector> (<c-vector>) end;

define sealed domain make (singleton(<c-pointer-vector>));

define constant $pointer-size = 4;

define sealed method pointer-value
    (ptr :: <c-pointer-vector>, #key index = 0)
 => (result :: <statically-typed-pointer>);
  pointer-at(ptr,
	     offset: index * $pointer-size,
	     class: <statically-typed-pointer>);
end method pointer-value;

define sealed method pointer-value-setter
    (value :: <statically-typed-pointer>,
     ptr :: <c-pointer-vector>, #key index = 0)
 => (result :: <statically-typed-pointer>);
  pointer-at(ptr,
	     offset: index * $pointer-size,
	     class: <statically-typed-pointer>) := value;
  value;
end method pointer-value-setter;

define sealed method content-size (value :: subclass(<c-pointer-vector>))
 => (result :: <integer>);
  $pointer-size;
end method content-size;
