#!/usr/bin/env perl

use strict;

my $pc = 0;
my %labels;
my @inst;

while (<>){
    chomp;
    s/[ \t]+/ /g;
    s/^([^;]*);.*$/$1/;
    s/^ (.*)$/$1/;
    s/^(.+) $/$1/;
    if (s/^([a-zA-Z0-9_-]+:)[ ]*(.*)$/$2/){
	die("label $1 already defined as instruction ". $labels{$1}) if defined($labels{$1});
	$labels{$1} = $pc;
    }
    /^[\w]*$/ and next;
    die("error: pc $pc when inst size ". scalar(@inst)) if $pc != scalar(@inst);
    ++$pc;
    s/\./$pc/g;
    push @inst, $_;
}

for my $pc (0..scalar @inst - 1){
    my $inst = $inst[$pc];
    my @words = split(" ",$inst);

    for (@words){
	next unless /:$/;
	my $target = $labels{$_};
	die("Label $_ not defined") unless defined($target);
	$_ = $target;
    }

    print join(" ", @words), "\n";
}
